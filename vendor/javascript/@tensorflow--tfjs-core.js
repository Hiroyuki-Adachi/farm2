import"../_/kiLnBc0C.js";export{Q as AdadeltaOptimizer,R as AdagradOptimizer,T as AdamOptimizer,U as AdamaxOptimizer,V as MomentumOptimizer,X as Optimizer,a9 as OptimizerConstructors,Y as RMSPropOptimizer,W as SGDOptimizer,a5 as backend_util,a1 as browser,a7 as gather_util,a2 as io,a8 as kernel_impls,a3 as math,n as nextFrame,a4 as serialization,a6 as slice_util,t as train,$ as version_core}from"../_/KcZLPp9h.js";export{T as Tensor,a as TensorBuffer,V as Variable,t as tensor_util}from"../_/kxV-4fTk.js";export{Rank,sumOutType,upcastType}from"./types.js";export{d0 as Reduction,e as abs,g as acos,h as acosh,j as add,k as addN,m as all,n as any,o as argMax,p as argMin,q as asin,r as asinh,t as atan,u as atan2,v as atanh,w as avgPool,x as avgPool3d,y as basicLSTMCell,A as batchNorm,B as batchNorm2d,C as batchNorm3d,D as batchNorm4d,z as batchToSpaceND,E as bincount,F as bitwiseAnd,cj as booleanMaskAsync,G as broadcastArgs,H as broadcastTo,d6 as broadcast_util,I as buffer,J as cast,K as ceil,L as clipByValue,M as clone,N as concat,O as concat1d,P as concat2d,Q as concat3d,R as concat4d,S as conv1d,T as conv2d,U as conv2dTranspose,V as conv3d,W as conv3dTranspose,X as cos,Y as cosh,ct as cosineWindow,Z as cumprod,_ as cumsum,cN as customGrad,$ as denseBincount,a0 as depthToSpace,a1 as depthwiseConv2d,a2 as diag,a3 as dilation2d,a4 as div,a5 as divNoNan,a6 as dot,cr as dropout,a7 as einsum,a8 as elu,cs as enclosingPowerOfTwo,a9 as ensureShape,aa as equal,ab as erf,ac as euclideanNorm,ad as exp,ae as expandDims,af as expm1,ag as eye,bM as fft,ah as fill,ai as floor,aj as floorDiv,f as fused,ak as gather,cq as gatherND,cM as grad,cL as grads,al as greater,am as greaterEqual,bN as ifft,an as imag,i as image,cu as inTopKAsync,bO as irfft,ao as isFinite,ap as isInf,aq as isNaN,ar as leakyRelu,as as less,at as lessEqual,l as linalg,au as linspace,av as localResponseNormalization,aw as log,ax as log1p,ay as logSigmoid,az as logSoftmax,aA as logSumExp,aB as logicalAnd,aC as logicalNot,aD as logicalOr,aE as logicalXor,a as losses,aF as lowerBound,aG as matMul,aH as max,aI as maxPool,aJ as maxPool3d,aK as maxPoolWithArgmax,aL as maximum,aM as mean,aN as meshgrid,aO as min,aP as minimum,aQ as mirrorPad,aR as mod,aS as moments,cm as movingAverage,aT as mul,aU as multiRNNCell,aV as multinomial,aW as neg,cl as norm,aX as notEqual,aY as oneHot,aZ as ones,a_ as onesLike,a$ as outerProduct,b0 as pad,b1 as pad1d,b2 as pad2d,b3 as pad3d,b4 as pad4d,b5 as pool,b6 as pow,b7 as prelu,b8 as print,b9 as prod,ba as raggedGather,bb as raggedRange,bc as raggedTensorToTensor,bd as rand,be as randomGamma,bf as randomNormal,bg as randomStandardNormal,bh as randomUniform,bi as randomUniformInt,bj as range,bk as real,bl as reciprocal,bm as relu,bn as relu6,bo as reshape,bp as reverse,bq as reverse1d,br as reverse2d,bs as reverse3d,bt as reverse4d,bP as rfft,bu as round,bv as rsqrt,bw as scalar,cn as scatterND,d7 as scatter_util,co as searchSorted,bx as selu,by as separableConv2d,bz as setdiff1dAsync,bA as sigmoid,bB as sign,b as signal,bC as sin,bD as sinh,bE as slice,bF as slice1d,bG as slice2d,bH as slice3d,bI as slice4d,bJ as softmax,bK as softplus,bL as spaceToBatchND,c as sparse,cp as sparseToDense,s as spectral,bQ as split,bR as sqrt,bS as square,bT as squaredDifference,bU as squeeze,bV as stack,bW as step,bX as stridedSlice,d as string,bY as sub,bZ as sum,b_ as tan,b$ as tanh,c0 as tensor1d,c1 as tensor2d,c2 as tensor3d,c3 as tensor4d,c4 as tensor5d,c5 as tensor6d,c6 as tensorScatterUpdate,c7 as tile,c8 as topk,ck as transpose,c9 as truncatedNormal,ca as unique,cb as unsortedSegmentSum,cc as unstack,cd as upperBound,cP as valueAndGrad,cO as valueAndGrads,ce as variable,d8 as variableGrads,cf as where,cg as whereAsync,ch as zeros,ci as zerosLike}from"../_/xYr_nMYD.js";export{ENV,Environment,env}from"./environment.js";export{DataStorage,KernelBackend}from"./backends/backend.js";export{O as OP_SCOPE_SUFFIX,b as backend,c as complex,n as deprecationWarn,q as disableDeprecationWarnings,k as dispose,j as disposeVariables,e as enableDebugMode,u as enableProdMode,l as engine,d as findBackend,f as findBackendFactory,g as getBackend,w as keep,m as memory,o as op,p as profile,h as ready,r as registerBackend,a as removeBackend,s as setBackend,x as setPlatform,t as tensor,i as tidy,v as time}from"../_/J5sCwXNI.js";export{A as Abs,a as Acos,b as Acosh,c as Add,d as AddN,bc as All,bd as Any,e as ArgMax,f as ArgMin,g as Asin,h as Asinh,j as Atan,i as Atan2,k as Atanh,p as AvgPool,n as AvgPool3D,m as AvgPool3DGrad,o as AvgPoolGrad,B as BatchMatMul,q as BatchToSpaceND,be as Bincount,bf as BitwiseAnd,bg as BroadcastArgs,r as BroadcastTo,C as Cast,s as Ceil,t as ClipByValue,bh as Complex,u as ComplexAbs,v as Concat,w as Conv2D,bi as Conv2DBackpropFilter,x as Conv2DBackpropInput,z as Conv3D,y as Conv3DBackpropFilterV2,bj as Conv3DBackpropInputV2,D as Cos,F as Cosh,bl as CropAndResize,bk as Cumprod,G as Cumsum,bm as DenseBincount,bn as DepthToSpace,H as DepthwiseConv2dNative,bo as DepthwiseConv2dNativeBackpropFilter,bp as DepthwiseConv2dNativeBackpropInput,bq as Diag,I as Dilation2D,K as Dilation2DBackpropFilter,J as Dilation2DBackpropInput,br as Draw,bs as Einsum,L as Elu,M as EluGrad,bt as Equal,N as Erf,O as Exp,P as ExpandDims,Q as Expm1,bu as FFT,bv as Fill,bw as FlipLeftRight,R as Floor,S as FloorDiv,cb as FromPixels,T as FusedBatchNorm,ce as FusedConv2D,cf as FusedDepthwiseConv2D,bx as GatherNd,U as GatherV2,by as Greater,V as GreaterEqual,bz as IFFT,W as Identity,bA as Imag,X as IsFinite,Y as IsInf,Z as IsNan,a3 as LRN,a2 as LRNGrad,_ as LeakyRelu,bB as Less,bC as LessEqual,bD as LinSpace,a0 as Log,$ as Log1p,a1 as LogSoftmax,bE as LogicalAnd,bF as LogicalNot,bG as LogicalOr,bH as LogicalXor,bI as LowerBound,bJ as MatrixBandPart,a4 as Max,a9 as MaxPool,a7 as MaxPool3D,a6 as MaxPool3DGrad,a8 as MaxPoolGrad,bK as MaxPoolWithArgmax,a5 as Maximum,aa as Mean,ab as Min,ac as Minimum,ad as MirrorPad,ae as Mod,bL as Multinomial,af as Multiply,ag as Neg,bN as NonMaxSuppressionV3,bO as NonMaxSuppressionV4,bP as NonMaxSuppressionV5,bM as NotEqual,ah as OneHot,ai as OnesLike,aj as Pack,ak as PadV2,bQ as Pool,al as Pow,am as Prelu,an as Prod,bR as RaggedGather,bS as RaggedRange,bT as RaggedTensorToTensor,bU as Range,bV as Real,ao as RealDiv,ap as Reciprocal,ar as Relu,aq as Relu6,as as Reshape,at as ResizeBilinear,au as ResizeBilinearGrad,av as ResizeNearestNeighbor,aw as ResizeNearestNeighborGrad,ax as Reverse,cc as RotateWithOffset,ay as Round,az as Rsqrt,bW as ScatterNd,bY as SearchSorted,aA as Select,aB as Selu,aC as Sigmoid,aD as Sign,aE as Sin,aF as Sinh,aG as Slice,aH as Softmax,aI as Softplus,aJ as SpaceToBatchND,bZ as SparseFillEmptyRows,b_ as SparseReshape,b$ as SparseSegmentMean,c0 as SparseSegmentSum,c1 as SparseToDense,aK as SplitV,aL as Sqrt,aM as Square,aN as SquaredDifference,c2 as StaticRegexReplace,aO as Step,c3 as StridedSlice,c4 as StringNGrams,c5 as StringSplit,c6 as StringToHashBucketFast,aP as Sub,aQ as Sum,aR as Tan,aS as Tanh,bX as TensorScatterUpdate,aT as Tile,c7 as TopK,c8 as Transform,aU as Transpose,c9 as Unique,aV as Unpack,aW as UnsortedSegmentSum,ca as UpperBound,aX as ZerosLike,cd as _FusedMatMul,bb as copyRegisteredKernels,b9 as getGradient,aZ as getKernel,ba as getKernelsForBackend,aY as registerGradient,a_ as registerKernel,b0 as unregisterGradient,a$ as unregisterKernel}from"../_/8ddWaOrg.js";export{t as test_util}from"../_/g6dUepHB.js";export{u as util}from"../_/vX83Zs-I.js";export{d as device_util}from"../_/VDbnZg2_.js";import"../_/TExXu_CZ.js";import"./util_base.js";import"seedrandom";import"long";

