name: "farm2"
services:
  db:
    image: postgres:13
    volumes:
      - type: volume
        source: dbdata
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
      - type: bind
        source: ./tmp/farm2.sql
        target: /docker-entrypoint-initdb.d/01_farm2.sql
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: farm2_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}" ]
      interval: 5s
      retries: 3

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bash -c "rdbg -n --open --host 0.0.0.0 --port 12345 -c -- bin/rails s -p 3000 -b 0.0.0.0"
    tty: true
    stdin_open: true
    environment:
      API_KEY: ${GOOGLE_MAPS_API_KEY}
      CHROME_URL: "http://chrome:3333"
      RAILS_ENV: development
      RUBYOPT: "--yjit"
    volumes:
      - type: bind
        source: .
        target: /farm2
        consistency: delegated
      - type: tmpfs
        target: /farm2/tmp
      - type: tmpfs
        target: /farm2/log
    ports:
      - "3000:3000"
      - "12345:12345"
    depends_on:
      db:
        condition: service_healthy
      sass:
        condition: service_started
      worker:
        condition: service_started

  worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: bundle exec rake jobs:work RAILS_ENV=development
    volumes:
      - type: bind
        source: .
        target: /farm2
    depends_on:
      db:
        condition: service_healthy

  sass:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: yarn watch:css
    volumes:
      - type: bind
        source: .
        target: /farm2

  chrome:
    image: browserless/chrome:latest
    ports:
      - "3333:3333"
    volumes:
      - .:/app:cached
    environment:
      PORT: 3333
      CONNECTION_TIMEOUT: 600000

  https-portal:
    image: steveltn/https-portal:1
    ports:
      - '80:80'
      - '443:443'
    links:
      - web
    environment:
      STAGE: local
      DOMAINS: 'my-app.local -> http://web:3000'

volumes:
  dbdata:
