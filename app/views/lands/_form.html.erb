<%= error_print(@land) %>
<%= form_for(@land) do |f| %>
<div class="form-row">
  <div class="field form-group col-md-2">
    <%= f.label :place, class: "col-form-label-lg" %>
    <%= f.text_field :place, {maxlength: 15, size: 20, required: true, class: "form-control"} %>
  </div>
  <div class="field form-group col-md-2">
    <%= f.label :land_place_id, class: "col-form-label-lg" %>
    <%= f.select(:land_place_id, @places.map {|place| [place.name, place.id]}, {}, {class: "form-control"}) %>
  </div>
  <div class="col-md-8">
    <div id="map" class="embed-responsive embed-responsive-16by9"></div>
  </div>
</div>
<div class="form-row">
  <div class="field form-group col-md-2">
    <%= f.label :owner_id, class: "col-form-label-lg" %>
    <%= f.select(:owner_id, @homes.map {|h| [h.owner_name, h.id]}, {}, {class: "form-control"}) %>
  </div>
  <div class="field form-group col-md-2">
    <%= f.label :manager_id, class: "col-form-label-lg" %>
    <%= f.select(:manager_id, @homes.map {|h| [h.owner_name, h.id]}, {}, {class: "form-control"}) %>
  </div>
  <div class="field form-group col-md-2">
    <%= f.label :area, class: "col-form-label-lg" %>
    <%= f.number_field(:area, {step: 0.01, max: 999.99, min: 0.01, size: 6, required: true, class: "form-control"}) %>
  </div>
  <div class="field form-group col-md-2">
    <%= f.label :reg_area, class: "col-form-label-lg" %>
    <%= f.number_field(:reg_area, {step: 0.01, max: 999.99, min: 0, size: 6, class: "form-control"}) %>
  </div>
  <div class="col-md-2">
    <input type="button" value="クリア" id="clear_region"  class="btn btn-danger mt-5" />
  </div>
</div>
<div class="form-row">
  <div class="field form-group col-md-2">
    <%= f.label :target_flag, class: "col-form-label-lg" %>
    <div class="form-check">
      <%= f.radio_button :target_flag, true %>
      <label for="land_target_flag_true" class="form-check-label">営農組合会員</label>
    </div>
    <div class="form-check">
      <%= f.radio_button :target_flag, false %>
      <label for="land_target_flag_false" class="form-check-label">個人管理</label>
    </div>
  </div>
  <div class="field form-group col-md-2">
    <%= f.label :display_order, class: "col-form-label-lg" %>
    <%= f.number_field(:display_order, {maxlength: 4, size: 4, required: true, class: "form-control"}) %>
  </div>
  <div class="field form-group col-md-2">
    <%= f.label :broccoli_mark, class: "col-form-label-lg" %>
    <%= f.text_field :broccoli_mark, {maxlength: 1, class: "form-control"} %>
    <%= f.hidden_field :region %>
  </div>
</div>
<div class="btn-toolbar">
  <div class="btn-group mr-2">
    <%= f.submit '登録', class: "btn btn-warning" %>
  </div>
  <% unless @land.new_record? %>
    <div class="btn-group mr-2">
      <%= link_to '削除', @land, {method: :delete, data: {confirm: "本当に削除してもよろしいですか?"}, class: "btn btn-danger"} %>
    </div>
  <% end %>
  <div class="btn-group mr-2">
    <%= link_to "戻る",  lands_path, class: "btn btn-outline-dark" %>
  </div>
</div>
<% end %>
<%= hidden_field_tag "location", "[#{land_location(@land)}]" %>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["API_KEY"]%>&callback=initMap&libraries=drawing" async defer></script>
<script>
let landRegion;

function initMap(){
  const org = JSON.parse($("#location").val());
  const pos = new google.maps.LatLng(org[0], org[1]);

  let region = [];
  if($("#land_region").val() != "") {
    JSON.parse($("#land_region").val().replace(/\(/g, "[").replace(/\)/g, "]")).forEach(function(rg) {
      region.push({lat: rg[0], lng: rg[1]});
    });
  }

  const map = new google.maps.Map(document.getElementById('map'), {
    center: pos,
    zoom: 18,
    mapTypeId: google.maps.MapTypeId.SATELLITE
  });

  landRegion = new google.maps.Polygon({
    paths: region,
    strokeColor: "#FF0000",
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: "#FF0000",
    fillOpacity: 0.35,
    map: map
  });

  const drawingManager = new google.maps.drawing.DrawingManager({
    drawingMode: google.maps.drawing.OverlayType.POLYGON,
    drawingControl: true,
    drawingControlOptions: {
      position: google.maps.ControlPosition.TOP_CENTER,
      drawingModes: [google.maps.drawing.OverlayType.POLYGON]
    },
    polygonOptions: {
      fillColor: '#99ff99',
      strokeColor: "#ffffff",
      editable: true
    },
    map: map
  });

  google.maps.event.addListener(drawingManager, 'polygoncomplete', function(arg) {
    let polygon = [];
    arg.getPath().getArray().forEach(function(path) {
      polygon.push("(" + path.lat() + "," + path.lng() + ")");
    });
    $("#land_region").val("(" + polygon.join(",") + ")");
  });
}

$(function() {
  $("#clear_region").click(function() {
    if(landRegion) {
      landRegion.setMap(null);
      $("#land_region").val("");
    }
  });
});
</script>
